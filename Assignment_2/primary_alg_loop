Iterative :
Make the board
Put the start index in the stack
Define a method called random_direction_generator (to choose a random direction top, button, right, left)
Make another method called Is_valid_move which takes the random direction from the method above (using a switch case) and then check if the move is valid or not.
Define a do while loop, first you push the start index in the stack, then you call the is_valid_move and move the circle, when the circle moves, 
pop the value from the stack, and push the new index in the stack. 
Keep repeating until you have 0 in the stack. Once you reach 0, game is finished.

//kim
  if a[0][0] it can only go right or down
  if a[0][j] (j other than 0 and n-1) it can go left,right,down
    there should be a condition in which doesn't allow the user to go up if the index value is > 1
  if[0][n-1] it can only go left or down
 //if first row
 //general idea-how would we run this while for all elements since they have different valid-direction? do we specify for each row?
t = board[i][j];
while (t>0){
  int k = board[i][j]
  j++;
  t--:
}

//for checking the validity 
if (i-1<t)
  var=not valid;
